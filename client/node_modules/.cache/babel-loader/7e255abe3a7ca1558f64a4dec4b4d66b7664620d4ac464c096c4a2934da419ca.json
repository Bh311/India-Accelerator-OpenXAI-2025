{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avira\\\\Downloads\\\\full_multilingual_chatbot\\\\client\\\\src\\\\components\\\\ChatUi.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages([...messages, newMessage]);\n    setInput(\"\");\n    setLoading(true);\n    try {\n      const response = await fetch(\"http://localhost:11434/api/generate\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          model: \"llama3\",\n          // change to the model you pulled in Ollama\n          prompt: input,\n          stream: false // to get a full response at once\n        })\n      });\n      const data = await response.json();\n      const botMessage = {\n        sender: \"bot\",\n        text: data.response\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (error) {\n      setMessages(prev => [...prev, {\n        sender: \"bot\",\n        text: \"⚠️ Error connecting to Ollama server.\"\n      }]);\n      console.error(\"Error:\", error);\n    }\n    setLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col w-full max-w-lg mx-auto h-[600px] border rounded-2xl shadow-lg p-4 bg-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto mb-4 space-y-2\",\n      children: [messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 rounded-lg max-w-xs ${msg.sender === \"user\" ? \"bg-blue-500 text-white self-end ml-auto\" : \"bg-gray-200 text-black self-start\"}`,\n        children: msg.text\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-gray-500 italic\",\n        children: \"Bot is typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex space-x-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"flex-1 border rounded-lg p-2\",\n        type: \"text\",\n        placeholder: \"Type a message...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: e => e.key === \"Enter\" && sendMessage()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        className: \"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"FpfR4LFmT6AFISP10oyeCF5r9c0=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Chatbot","_s","messages","setMessages","input","setInput","loading","setLoading","sendMessage","trim","newMessage","sender","text","response","fetch","method","headers","body","JSON","stringify","model","prompt","stream","data","json","botMessage","prev","error","console","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/Users/avira/Downloads/full_multilingual_chatbot/client/src/components/ChatUi.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const newMessage = { sender: \"user\", text: input };\r\n    setMessages([...messages, newMessage]);\r\n    setInput(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:11434/api/generate\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          model: \"llama3\", // change to the model you pulled in Ollama\r\n          prompt: input,\r\n          stream: false,   // to get a full response at once\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botMessage = { sender: \"bot\", text: data.response };\r\n\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (error) {\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: \"bot\", text: \"⚠️ Error connecting to Ollama server.\" },\r\n      ]);\r\n      console.error(\"Error:\", error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full max-w-lg mx-auto h-[600px] border rounded-2xl shadow-lg p-4 bg-white\">\r\n      {/* Chat Area */}\r\n      <div className=\"flex-1 overflow-y-auto mb-4 space-y-2\">\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`p-2 rounded-lg max-w-xs ${\r\n              msg.sender === \"user\"\r\n                ? \"bg-blue-500 text-white self-end ml-auto\"\r\n                : \"bg-gray-200 text-black self-start\"\r\n            }`}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n        {loading && <div className=\"text-gray-500 italic\">Bot is typing...</div>}\r\n      </div>\r\n\r\n      {/* Input Area */}\r\n      <div className=\"flex space-x-2\">\r\n        <input\r\n          className=\"flex-1 border rounded-lg p-2\"\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n        />\r\n        <button\r\n          onClick={sendMessage}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700\"\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}