{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chatbot=()=>{const[messages,setMessages]=useState([]);const[input,setInput]=useState(\"\");const[loading,setLoading]=useState(false);const sendMessage=async()=>{if(!input.trim())return;const newMessage={sender:\"user\",text:input};setMessages([...messages,newMessage]);setInput(\"\");setLoading(true);try{const response=await fetch(\"http://localhost:11434/api/generate\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({model:\"llama3\",// change to the model you pulled in Ollama\nprompt:input,stream:false// to get a full response at once\n})});const data=await response.json();const botMessage={sender:\"bot\",text:data.response};setMessages(prev=>[...prev,botMessage]);}catch(error){setMessages(prev=>[...prev,{sender:\"bot\",text:\"⚠️ Error connecting to Ollama server.\"}]);console.error(\"Error:\",error);}setLoading(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-col w-full max-w-lg mx-auto h-[600px] border rounded-2xl shadow-lg p-4 bg-white\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex-1 overflow-y-auto mb-4 space-y-2\",children:[messages.map((msg,idx)=>/*#__PURE__*/_jsx(\"div\",{className:\"p-2 rounded-lg max-w-xs \".concat(msg.sender===\"user\"?\"bg-blue-500 text-white self-end ml-auto\":\"bg-gray-200 text-black self-start\"),children:msg.text},idx)),loading&&/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-500 italic\",children:\"Bot is typing...\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"flex-1 border rounded-lg p-2\",type:\"text\",placeholder:\"Type a message...\",value:input,onChange:e=>setInput(e.target.value),onKeyDown:e=>e.key===\"Enter\"&&sendMessage()}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,className:\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700\",children:\"Send\"})]})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Chatbot","messages","setMessages","input","setInput","loading","setLoading","sendMessage","trim","newMessage","sender","text","response","fetch","method","headers","body","JSON","stringify","model","prompt","stream","data","json","botMessage","prev","error","console","className","children","map","msg","idx","concat","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick"],"sources":["C:/Users/avira/Downloads/full_multilingual_chatbot/client/src/components/ChatUi.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const newMessage = { sender: \"user\", text: input };\r\n    setMessages([...messages, newMessage]);\r\n    setInput(\"\");\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:11434/api/generate\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          model: \"llama3\", // change to the model you pulled in Ollama\r\n          prompt: input,\r\n          stream: false,   // to get a full response at once\r\n        }),\r\n      });\r\n\r\n      const data = await response.json();\r\n      const botMessage = { sender: \"bot\", text: data.response };\r\n\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (error) {\r\n      setMessages((prev) => [\r\n        ...prev,\r\n        { sender: \"bot\", text: \"⚠️ Error connecting to Ollama server.\" },\r\n      ]);\r\n      console.error(\"Error:\", error);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col w-full max-w-lg mx-auto h-[600px] border rounded-2xl shadow-lg p-4 bg-white\">\r\n      {/* Chat Area */}\r\n      <div className=\"flex-1 overflow-y-auto mb-4 space-y-2\">\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`p-2 rounded-lg max-w-xs ${\r\n              msg.sender === \"user\"\r\n                ? \"bg-blue-500 text-white self-end ml-auto\"\r\n                : \"bg-gray-200 text-black self-start\"\r\n            }`}\r\n          >\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n        {loading && <div className=\"text-gray-500 italic\">Bot is typing...</div>}\r\n      </div>\r\n\r\n      {/* Input Area */}\r\n      <div className=\"flex space-x-2\">\r\n        <input\r\n          className=\"flex-1 border rounded-lg p-2\"\r\n          type=\"text\"\r\n          placeholder=\"Type a message...\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\r\n        />\r\n        <button\r\n          onClick={sendMessage}\r\n          className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700\"\r\n        >\r\n          Send\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}