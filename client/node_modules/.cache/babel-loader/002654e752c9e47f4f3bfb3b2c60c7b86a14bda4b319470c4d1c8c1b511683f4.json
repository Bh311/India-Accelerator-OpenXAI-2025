{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avira\\\\Downloads\\\\full_multilingual_chatbot\\\\client\\\\src\\\\components\\\\ChatUi.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const newMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages([...messages, newMessage]);\n    const response = await fetch(\"http://localhost:5000/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        message: input\n      })\n    });\n    const data = await response.json();\n    const botMessage = {\n      sender: \"bot\",\n      text: data.reply\n    };\n    setMessages([...messages, newMessage, botMessage]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen flex flex-col items-center justify-center bg-gray-100 p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-2xl bg-white rounded-2xl shadow-lg p-6 flex flex-col space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-1 overflow-y-auto border p-4 rounded-lg bg-gray-50\",\n        children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `mb-2 p-2 rounded-lg max-w-xs ${msg.sender === \"user\" ? \"bg-blue-500 text-white self-end ml-auto\" : \"bg-gray-200 text-black self-start mr-auto\"}`,\n          children: msg.text\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"flex-1 border rounded-l-lg p-2\",\n          value: input,\n          onChange: e => setInput(e.target.value),\n          placeholder: \"\\xC9crivez ici...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          className: \"bg-blue-500 text-white px-4 rounded-r-lg\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","input","setInput","sendMessage","trim","newMessage","sender","text","response","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","className","children","map","msg","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/avira/Downloads/full_multilingual_chatbot/client/src/components/ChatUi.jsx"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nfunction App() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const newMessage = { sender: \"user\", text: input };\r\n    setMessages([...messages, newMessage]);\r\n\r\n    const response = await fetch(\"http://localhost:5000/chat\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ message: input }),\r\n    });\r\n\r\n    const data = await response.json();\r\n    const botMessage = { sender: \"bot\", text: data.reply };\r\n\r\n    setMessages([...messages, newMessage, botMessage]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-screen flex flex-col items-center justify-center bg-gray-100 p-4\">\r\n      <div className=\"w-full max-w-2xl bg-white rounded-2xl shadow-lg p-6 flex flex-col space-y-4\">\r\n        <div className=\"flex-1 overflow-y-auto border p-4 rounded-lg bg-gray-50\">\r\n          {messages.map((msg, idx) => (\r\n            <div\r\n              key={idx}\r\n              className={`mb-2 p-2 rounded-lg max-w-xs ${\r\n                msg.sender === \"user\"\r\n                  ? \"bg-blue-500 text-white self-end ml-auto\"\r\n                  : \"bg-gray-200 text-black self-start mr-auto\"\r\n              }`}\r\n            >\r\n              {msg.text}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <div className=\"flex\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"flex-1 border rounded-l-lg p-2\"\r\n            value={input}\r\n            onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Ã‰crivez ici...\"\r\n          />\r\n          <button\r\n            onClick={sendMessage}\r\n            className=\"bg-blue-500 text-white px-4 rounded-r-lg\"\r\n          >\r\n            Send\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}