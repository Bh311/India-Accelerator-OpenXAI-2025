{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avira\\\\Downloads\\\\full_multilingual_chatbot\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [lang, setLang] = useState('en');\n  const [loading, setLoading] = useState(false);\n  const send = async () => {\n    if (!input.trim()) return;\n    const userMsg = input;\n    setMessages(m => [...m, {\n      from: 'user',\n      text: userMsg\n    }]);\n    setInput('');\n    setLoading(true);\n    try {\n      const res = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message: userMsg,\n          userLang: lang\n        })\n      });\n      const data = await res.json();\n      setMessages(m => [...m, {\n        from: 'user',\n        text: userMsg\n      }, {\n        from: 'bot',\n        text: data.reply\n      }]);\n    } catch (err) {\n      console.error(err);\n      setMessages(m => [...m, {\n        from: 'bot',\n        text: 'Error: could not reach server'\n      }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Multilingual Chatbot (MERN + Ollama)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: 8,\n        marginBottom: 8\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: lang,\n        onChange: e => setLang(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"en\",\n          children: \"English\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"es\",\n          children: \"Spanish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"fr\",\n          children: \"French\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"hi\",\n          children: \"Hindi\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"de\",\n          children: \"German\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        style: {\n          flex: 1\n        },\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: send,\n        disabled: loading,\n        children: loading ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat\",\n      \"aria-live\": \"polite\",\n      children: messages.map((m, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"msg \" + (m.from === 'user' ? 'user' : 'bot'),\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [m.from, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), \" \", m.text]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+e4czcBF7GQRCPN5PT0DhnbeHxw=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","lang","setLang","loading","setLoading","send","trim","userMsg","m","from","text","res","fetch","method","headers","body","JSON","stringify","message","userLang","data","json","reply","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gap","marginBottom","value","onChange","e","target","flex","placeholder","onClick","disabled","map","i","_c","$RefreshReg$"],"sources":["C:/Users/avira/Downloads/full_multilingual_chatbot/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function App() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [lang, setLang] = useState('en');\n  const [loading, setLoading] = useState(false);\n\n  const send = async () => {\n    if (!input.trim()) return;\n    const userMsg = input;\n    setMessages(m => [...m, { from: 'user', text: userMsg }]);\n    setInput('');\n    setLoading(true);\n    try {\n      const res = await fetch('http://localhost:5000/api/chat', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ message: userMsg, userLang: lang })\n      });\n      const data = await res.json();\n      setMessages(m => [...m, { from: 'user', text: userMsg }, { from: 'bot', text: data.reply }]);\n    } catch (err) {\n      console.error(err);\n      setMessages(m => [...m, { from: 'bot', text: 'Error: could not reach server' }]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <h1>Multilingual Chatbot (MERN + Ollama)</h1>\n      <div style={{ display: 'flex', gap: 8, marginBottom: 8 }}>\n        <select value={lang} onChange={e => setLang(e.target.value)}>\n          <option value=\"en\">English</option>\n          <option value=\"es\">Spanish</option>\n          <option value=\"fr\">French</option>\n          <option value=\"hi\">Hindi</option>\n          <option value=\"de\">German</option>\n        </select>\n        <input style={{ flex: 1 }} value={input} onChange={e => setInput(e.target.value)} placeholder=\"Type message...\" />\n        <button onClick={send} disabled={loading}>{loading ? 'Sending...' : 'Send'}</button>\n      </div>\n      <div className=\"chat\" aria-live=\"polite\">\n        {messages.map((m, i) => (\n          <div key={i} className={\"msg \" + (m.from === 'user' ? 'user' : 'bot')}>\n            <b>{m.from}:</b> {m.text}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}